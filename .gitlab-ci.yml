stages:
  - Quality
  - Build
  - Deploy

Code Analysis:
  stage: Quality
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_TOKEN: b0cdfcceaebf0516877e421d19d763cf390e49e7
    SONAR_HOST_URL: https://sonar.visionerp.digital
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths: [".sonar/cache"]
  script: ["sonar-scanner"]
  allow_failure: true
  # only: ["master"]

Package:
  stage: Build
  image: docker
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build --cache-from $IMAGE:latest -t $IMAGE:$CI_COMMIT_SHA -t $IMAGE:latest .
    - docker push $IMAGE:$CI_COMMIT_SHA
    - docker push $IMAGE:latest

Deploy:
  stage: Deploy
  image: dtzar/helm-kubectl
  before_script:
    - echo "${KUBECONFIG}" > kube-config
    - export KUBECONFIG=kube-config
  script:
    - kubectl apply -f devops/config.yaml
    - kubectl set image deploy vision vision=$IMAGE:$CI_COMMIT_SHA
